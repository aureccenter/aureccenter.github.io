{"version":3,"sources":["components/Agenda.js","components/Buttons.js","components/ReservationForm.js","components/Monthly.js","components/NavigationBar.js","components/Weekly.js","App.js","reportWebVitals.js","index.js"],"names":["Agenda","className","style","height","src","border","width","frameborder","scrolling","Buttons","props","changeView","viewName","Button","variant","currentView","onClick","ReservationForm","useState","firstName","lastName","email","idNumber","reservationReason","rooms","reservationDate","reservationDay","numberOfAttendees","startTime","endTime","start","end","organization","isRecurring","recurringFrequency","formResponses","setFormResponses","setIsRecurring","validated","setValidated","timeIsBad","setTimeIsBad","errorMessage","setErrorMessage","formSubmitted","setFormSubmitted","inputRef","useRef","inputRef2","convertTime","number","timeOfDay","newNumber","decimal","Math","floor","textAlign","color","Form","noValidate","onSubmit","event","currentTarget","checkValidity","preventDefault","stopPropagation","emailjs","send","then","response","console","log","status","text","error","Group","controlId","Label","Control","required","type","placeholder","onChange","e","target","value","test","setCustomValidity","Feedback","min","Check","length","label","checked","concat","filter","Text","valueAsDate","dayOfWeek","Date","getTime","getTimezoneOffset","toString","substring","name","id","as","disabled","selected","display","Row","Col","column","ref","time","current","firstChild","Monthly","NavigationBar","Navbar","bg","expand","Brand","href","Toggle","aria-controls","Collapse","Nav","Link","Weekly","App","calendarView","setCalendarView","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3a7b3492.chunk.js","sourcesContent":["const Agenda = () => {\n  return (\n    <div className='container mb-5 mt-3'>\n      <div className='row'>\n        <div className='col' style={{ height: '600px' }}>\n          <iframe\n            src='https://calendar.google.com/calendar/embed?height=600&amp;wkst=1&amp;bgcolor=%23ffffff&amp;ctz=America%2FDetroit&amp;src=MTRxNXVrZDNjbGkzNjdzMTdwcWE0b2p0NjRAZ3JvdXAuY2FsZW5kYXIuZ29vZ2xlLmNvbQ&amp;src=ZTA5ZGpybDMzaDRrZHY4aTB2aGZydGFxa2NAZ3JvdXAuY2FsZW5kYXIuZ29vZ2xlLmNvbQ&amp;src=aXF1NzAxbWw4dGEwdmpzb3VnOXZsaWQ5YjBAZ3JvdXAuY2FsZW5kYXIuZ29vZ2xlLmNvbQ&amp;color=%23039BE5&amp;color=%23D50000&amp;color=%237CB342&amp;title=Rec%20Center%20Reservations&amp;showNav=1&amp;showTabs=0&amp;showPrint=0&amp;mode=AGENDA'\n            style={{ border: 'solid 1px #777' }}\n            width='100%'\n            height='100%'\n            frameborder='0'\n            scrolling='no'\n          ></iframe>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Agenda;\n","import Button from 'react-bootstrap/Button';\n\nconst Buttons = (props) => {\n  const changeView = (viewName) => {\n    props.changeView(viewName);\n  };\n\n  return (\n    <div className='container'>\n      <div className='row'>\n        <Button\n          variant={`${props.currentView == 'Month' ? '' : 'outline-'}primary`}\n          className='col'\n          onClick={() => changeView('Month')}\n        >\n          Monthly View\n        </Button>{' '}\n        <Button\n          variant={`${props.currentView == 'Week' ? '' : 'outline-'}primary`}\n          className='col'\n          onClick={() => changeView('Week')}\n        >\n          Weekly View\n        </Button>{' '}\n        <Button\n          variant={`${props.currentView == 'Agenda' ? '' : 'outline-'}primary`}\n          className='col'\n          onClick={() => changeView('Agenda')}\n        >\n          Agenda View\n        </Button>{' '}\n      </div>\n    </div>\n  );\n};\n\nexport default Buttons;\n","import Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport TimePicker from 'react-bootstrap-time-picker';\nimport { useRef, useState } from 'react';\nimport emailjs from 'emailjs-com';\n\nconst ReservationForm = () => {\n  const [formResponses, setFormResponses] = useState({\n    firstName: '',\n    lastName: '',\n    email: '',\n    idNumber: '',\n    reservationReason: '',\n    rooms: [],\n    reservationDate: '',\n    reservationDay: '',\n    numberOfAttendees: '',\n    startTime: 39600,\n    endTime: 41400,\n    start: '11:00 AM',\n    end: '11:30 AM',\n    organization: '',\n    isRecurring: false,\n    recurringFrequency: '',\n  });\n\n  const [isRecurring, setIsRecurring] = useState(false);\n  const [validated, setValidated] = useState(false);\n  const [timeIsBad, setTimeIsBad] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n  const [formSubmitted, setFormSubmitted] = useState(false);\n  const inputRef = useRef();\n  const inputRef2 = useRef();\n\n  const handleSubmit = (event) => {\n    const form = event.currentTarget;\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n    setValidated(true);\n    setFormSubmitted(true);\n\n    emailjs\n      .send(\n        'service_1vw76um',\n        'template_j575ef8',\n        formResponses,\n        'user_wJ5IIawclAEmWJ073b9vj'\n      )\n      .then(\n        function (response) {\n          console.log('SUCCESS!', response.status, response.text);\n        },\n        function (error) {\n          console.log('FAILED...', error);\n        }\n      );\n  };\n\n  const handleOnChange = (email, event) => {\n    // don't remember from where i copied this code, but this works.\n    let re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\n    if (re.test(email)) {\n      event.target.setCustomValidity('');\n    } else {\n      event.target.setCustomValidity('Email is invalid');\n    }\n  };\n\n  const convertTime = (number) => {\n    let newNumber = number / 3600;\n    let decimal = newNumber - Math.floor(newNumber);\n    newNumber = Math.floor(newNumber);\n    decimal *= 60;\n    let timeOfDay;\n    if (newNumber >= 12) timeOfDay = 'PM';\n    else timeOfDay = 'AM';\n    return [\n      `${newNumber == 0 || newNumber == 12 ? 12 : newNumber % 12}:${\n        decimal == 0 ? '00' : decimal\n      } ${timeOfDay}`,\n      `${newNumber}:${decimal == 0 ? '00' : decimal}`,\n    ];\n  };\n\n  return formSubmitted ? (\n    <div className='container'>\n      <div className='row'>\n        <h4 style={{ textAlign: 'center' }}>\n          {' '}\n          Thank you for your submission. You will be emailed at\n          <span style={{ color: 'cornflowerblue' }}>\n            {' '}\n            {formResponses.email}\n          </span>{' '}\n          shortly{' '}\n        </h4>\n        <div style={{ height: '400px' }} />\n      </div>\n    </div>\n  ) : (\n    <div className='container'>\n      <div className='row'>\n        <div className='col'></div>\n        <div className='col-9'>\n          <Form noValidate validated={validated} onSubmit={handleSubmit}>\n            <Form.Group controlId='formBasicEmail'>\n              <Form.Label className='mt-1'>First Name</Form.Label>\n              <Form.Control\n                required\n                type='text'\n                placeholder='Enter First Name'\n                onChange={(e) => {\n                  setFormResponses({\n                    ...formResponses,\n                    firstName: e.target.value,\n                  });\n                }}\n              />\n\n              <Form.Label className='mt-1'>Last Name</Form.Label>\n              <Form.Control\n                required\n                type='text'\n                placeholder='Enter Last Name'\n                onChange={(e) => {\n                  setFormResponses({\n                    ...formResponses,\n                    lastName: e.target.value,\n                  });\n                }}\n              />\n            </Form.Group>\n            <Form.Group>\n              <Form.Label className='mt-1'>Email</Form.Label>\n              <Form.Control\n                required\n                type='text'\n                placeholder='Enter Email Address'\n                onChange={(e) => {\n                  handleOnChange(e.target.value, e);\n                  setFormResponses({\n                    ...formResponses,\n                    email: e.target.value,\n                  });\n                }}\n              />\n              <Form.Control.Feedback type='invalid'>\n                Invalid Email\n              </Form.Control.Feedback>\n            </Form.Group>\n            <Form.Group>\n              <Form.Label className='mt-1'>ID Number</Form.Label>\n              <Form.Control\n                required\n                type='number'\n                placeholder='Enter ID Number'\n                min='0'\n                onChange={(e) => {\n                  setFormResponses({\n                    ...formResponses,\n                    idNumber: e.target.value,\n                  });\n                }}\n              />\n\n              <Form.Label className='mt-1'>\n                What Is the Reservation For?\n              </Form.Label>\n              <Form.Control\n                required\n                type='text'\n                placeholder='Ex. Birthday Party, Club Name Etc.'\n                onChange={(e) => {\n                  setFormResponses({\n                    ...formResponses,\n                    reservationReason: e.target.value,\n                  });\n                }}\n              />\n            </Form.Group>\n\n            <Form.Group controlId='formBasicCheckbox'>\n              <Form.Label>Which Area Would You Like to Reserve?</Form.Label>\n              <hr />\n              <Form.Check\n                required={formResponses.rooms.length === 0}\n                type='checkbox'\n                label='Main Rec Center'\n                onClick={(e) => {\n                  if (e.target.checked) {\n                    setFormResponses({\n                      ...formResponses,\n                      rooms: formResponses.rooms.concat('Main Rec Center'),\n                    });\n                  } else {\n                    setFormResponses({\n                      ...formResponses,\n                      rooms: formResponses.rooms.filter(\n                        (value) => value !== 'Main Rec Center'\n                      ),\n                    });\n                  }\n                }}\n              />\n              <Form.Text className='text-muted mb-2'>Capacity 10</Form.Text>\n              <Form.Check\n                required={formResponses.rooms.length === 0}\n                type='checkbox'\n                label='Amphitheater'\n                onClick={(e) => {\n                  if (e.target.checked) {\n                    setFormResponses({\n                      ...formResponses,\n                      rooms: formResponses.rooms.concat('Amphitheater'),\n                    });\n                  } else {\n                    setFormResponses({\n                      ...formResponses,\n                      rooms: formResponses.rooms.filter(\n                        (value) => value !== 'Amphitheater'\n                      ),\n                    });\n                  }\n                }}\n              />\n              <Form.Text className='text-muted mb-2'>\n                Capacity 15 (If socially distanced chairs are used)\n              </Form.Text>\n              <Form.Check\n                required={formResponses.rooms.length === 0}\n                type='checkbox'\n                label='Study/Conference Room'\n                onClick={(e) => {\n                  if (e.target.checked) {\n                    setFormResponses({\n                      ...formResponses,\n                      rooms: formResponses.rooms.concat(\n                        'Study/Conference Room'\n                      ),\n                    });\n                  } else {\n                    setFormResponses({\n                      ...formResponses,\n                      rooms: formResponses.rooms.filter(\n                        (value) => value !== 'Study/Conference Room'\n                      ),\n                    });\n                  }\n                }}\n              />\n              <Form.Text className='text-muted'>Capacity 2</Form.Text>\n              <hr />\n            </Form.Group>\n\n            <Form.Group controlId='moreQuestions'>\n              <Form.Label className='mt-1'>\n                What Date would you Like to Reserve?\n              </Form.Label>\n              <Form.Control\n                required\n                type='date'\n                onChange={(e) => {\n                  if (e.target.valueAsDate === null) {\n                    setFormResponses({\n                      ...formResponses,\n                      reservationDate: '',\n                      reservationDay: '',\n                    });\n                  } else {\n                    let dayOfWeek = new Date(\n                      e.target.valueAsDate.getTime() +\n                        e.target.valueAsDate.getTimezoneOffset() * 60000\n                    )\n                      .toString()\n                      .substring(0, 3);\n                    setFormResponses({\n                      ...formResponses,\n                      reservationDate: e.target.value,\n                      recurringFrequency:\n                        dayOfWeek == 'Sat'\n                          ? 'Once a month'\n                          : formResponses.recurringFrequency,\n                      reservationDay: dayOfWeek,\n                    });\n                  }\n                }}\n              />\n\n              <Form.Label className='mt-1'>\n                Is This Reservation Recurring?\n              </Form.Label>\n              <Form.Check\n                required\n                type='radio'\n                label='Yes'\n                name='formQuestionRadios'\n                id='formQuestionRadios1'\n                onChange={() => {\n                  setIsRecurring(true);\n                  setFormResponses({\n                    ...formResponses,\n                    isRecurring: true,\n                  });\n                }}\n              />\n              <Form.Check\n                type='radio'\n                label='No'\n                name='formQuestionRadios'\n                id='formQuestionRadios2'\n                onChange={() => {\n                  setIsRecurring(false);\n                  setFormResponses({\n                    ...formResponses,\n                    isRecurring: false,\n                  });\n                }}\n              />\n\n              {isRecurring ? (\n                <div>\n                  <Form.Label className='mt-1'>\n                    How Often Does it Occur?\n                  </Form.Label>\n\n                  <Form.Control\n                    required\n                    as='select'\n                    onChange={(e) => {\n                      setFormResponses({\n                        ...formResponses,\n                        recurringFrequency: e.target.value,\n                      });\n                    }}\n                  >\n                    <option disabled selected value>\n                      {' '}\n                      -- select an option --{' '}\n                    </option>\n                    {formResponses.reservationDay !== 'Sat' ? (\n                      <>\n                        <option>Every week</option>\n                        <option>Every other week</option>\n                      </>\n                    ) : (\n                      <></>\n                    )}\n                    <option>Once a month</option>\n                  </Form.Control>\n                </div>\n              ) : (\n                <></>\n              )}\n\n              <Form.Label className='mt-2'>\n                How Many People would be Attending the Reservation?\n              </Form.Label>\n              <Form.Control\n                required\n                type='number'\n                placeholder='Enter a number'\n                min='0'\n                onChange={(e) => {\n                  setFormResponses({\n                    ...formResponses,\n                    numberOfAttendees: e.target.value,\n                  });\n                }}\n              />\n            </Form.Group>\n            <Form.Group>\n              <Form.Label className='mt-1'>\n                What Time Would you Like to Reserve??\n              </Form.Label>\n              <Form.Control\n                required={timeIsBad}\n                type='text'\n                style={{ display: 'none' }}\n              />\n              <Form.Control.Feedback type='invalid'>\n                {errorMessage}\n              </Form.Control.Feedback>\n              <Form.Row>\n                <Col>\n                  <Form.Label column='sm'>Start Time</Form.Label>\n                  <div ref={inputRef}>\n                    <TimePicker\n                      start='11:00'\n                      value={formResponses.startTime}\n                      onChange={(time) => {\n                        setFormResponses({\n                          ...formResponses,\n                          startTime: time,\n                          endTime: time == 84600 ? 0 : time + 1800,\n                          start: convertTime(time)[0],\n                          end: convertTime(time == 84600 ? 0 : time + 1800)[0],\n                        });\n                        if (time >= formResponses.endTime) {\n                          inputRef.current.firstChild.setCustomValidity(\n                            'Time is invalid'\n                          );\n                          inputRef2.current.firstChild.setCustomValidity(\n                            'Time is invalid'\n                          );\n                          setTimeIsBad(true);\n                          setErrorMessage(\n                            'The end time must be after the start time'\n                          );\n                        } else {\n                          setTimeIsBad(false);\n                          inputRef.current.firstChild.setCustomValidity('');\n                          inputRef2.current.firstChild.setCustomValidity('');\n                        }\n                      }}\n                    />\n                  </div>\n                </Col>\n                <Col>\n                  <Form.Label column='sm'>End Time</Form.Label>\n                  <div ref={inputRef2}>\n                    <TimePicker\n                      start={\n                        formResponses.startTime !== 84600\n                          ? convertTime(formResponses.startTime + 1800)[1]\n                          : '00:00'\n                      }\n                      end={\n                        formResponses.startTime !== 84600 ? '23:30' : '00:00'\n                      }\n                      value={formResponses.endTime}\n                      onChange={(time) => {\n                        setFormResponses({\n                          ...formResponses,\n                          endTime: time,\n                          end: convertTime(time)[0],\n                        });\n                        if (time <= formResponses.startTime) {\n                          inputRef2.current.firstChild.setCustomValidity(\n                            'Time is invalid'\n                          );\n                          inputRef.current.firstChild.setCustomValidity(\n                            'Time is invalid'\n                          );\n                          setTimeIsBad(true);\n                          setErrorMessage(\n                            'The end time must be after the start time'\n                          );\n                        } else {\n                          setTimeIsBad(false);\n                          inputRef2.current.firstChild.setCustomValidity('');\n                          inputRef.current.firstChild.setCustomValidity('');\n                        }\n                      }}\n                    />\n                  </div>\n                </Col>\n              </Form.Row>\n            </Form.Group>\n\n            <Form.Group controlId='formOrganization'>\n              <Form.Label className='mt-2'>\n                Is There An Organization Associated with Your Reservation?\n              </Form.Label>\n              <Form.Control\n                required\n                type='text'\n                placeholder='Ex. BSCF, AUSA'\n                onChange={(e) => {\n                  setFormResponses({\n                    ...formResponses,\n                    organization: e.target.value,\n                  });\n                }}\n              />\n            </Form.Group>\n\n            <Button variant='primary' type='submit'>\n              Submit\n            </Button>\n          </Form>\n        </div>\n        <div className='col'></div>\n      </div>\n    </div>\n  );\n};\n\nexport default ReservationForm;\n","const Monthly = () => {\n  return (\n    <div className='container mb-5 mt-3'>\n      <div className='row'>\n        <div className='col' style={{ height: '600px' }}>\n          <iframe\n            src='https://calendar.google.com/calendar/embed?height=600&amp;wkst=1&amp;bgcolor=%23ffffff&amp;ctz=America%2FDetroit&amp;src=MTRxNXVrZDNjbGkzNjdzMTdwcWE0b2p0NjRAZ3JvdXAuY2FsZW5kYXIuZ29vZ2xlLmNvbQ&amp;src=ZTA5ZGpybDMzaDRrZHY4aTB2aGZydGFxa2NAZ3JvdXAuY2FsZW5kYXIuZ29vZ2xlLmNvbQ&amp;src=aXF1NzAxbWw4dGEwdmpzb3VnOXZsaWQ5YjBAZ3JvdXAuY2FsZW5kYXIuZ29vZ2xlLmNvbQ&amp;color=%23039BE5&amp;color=%23D50000&amp;color=%237CB342&amp;title=Rec%20Center%20Reservations&amp;showNav=1&amp;showTabs=0&amp;showPrint=0'\n            style={{ border: 'solid 1px #777' }}\n            width='100%'\n            height='100%'\n            frameborder='0'\n            scrolling='no'\n          ></iframe>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Monthly;\n","import Navbar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav';\n\nconst NavigationBar = () => {\n  return (\n    <>\n      <Navbar bg='dark' expand='lg' variant='dark' className='mb-5'>\n        <Navbar.Brand href='#Calendar' className='pl-3'>\n          AU Rec Center\n        </Navbar.Brand>\n        <Navbar.Toggle aria-controls='basic-navbar-nav' />\n        <Navbar.Collapse id='basic-navbar-nav' className='pl-3'>\n          <Nav className='ml-auto pr-3'>\n            <Nav.Link href='#Calendar'>Calendar</Nav.Link>\n            <Nav.Link href='#Reservation'>Reservation</Nav.Link>\n          </Nav>\n        </Navbar.Collapse>\n      </Navbar>\n    </>\n  );\n};\n\nexport default NavigationBar;\n","const Weekly = () => {\n  return (\n    <div className='container mb-5 mt-3'>\n      <div className='row'>\n        <div className='col' style={{ height: '600px' }}>\n          <iframe\n            src='https://calendar.google.com/calendar/embed?height=600&amp;wkst=1&amp;bgcolor=%23ffffff&amp;ctz=America%2FDetroit&amp;src=MTRxNXVrZDNjbGkzNjdzMTdwcWE0b2p0NjRAZ3JvdXAuY2FsZW5kYXIuZ29vZ2xlLmNvbQ&amp;src=ZTA5ZGpybDMzaDRrZHY4aTB2aGZydGFxa2NAZ3JvdXAuY2FsZW5kYXIuZ29vZ2xlLmNvbQ&amp;src=aXF1NzAxbWw4dGEwdmpzb3VnOXZsaWQ5YjBAZ3JvdXAuY2FsZW5kYXIuZ29vZ2xlLmNvbQ&amp;color=%23039BE5&amp;color=%23D50000&amp;color=%237CB342&amp;title=Rec%20Center%20Reservations&amp;showNav=1&amp;showTabs=0&amp;showPrint=0&amp;mode=WEEK'\n            style={{ border: 'solid 1px #777' }}\n            width='100%'\n            height='100%'\n            frameborder='0'\n            scrolling='no'\n          ></iframe>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Weekly;\n","import { useState } from 'react';\nimport './App.css';\nimport Agenda from './components/Agenda';\nimport Buttons from './components/Buttons';\nimport Form from './components/ReservationForm';\nimport Monthly from './components/Monthly';\nimport NavBar from './components/NavigationBar';\nimport Weekly from './components/Weekly';\n\nfunction App() {\n  const [calendarView, setCalendarView] = useState('Month');\n\n  const changeView = (viewName) => {\n    setCalendarView(viewName);\n  };\n\n  return (\n    <>\n      <NavBar />\n      <h1 style={{ textAlign: 'center' }} id='Calendar'>\n        {' '}\n        Calendar{' '}\n      </h1>\n      <Buttons changeView={changeView} currentView={calendarView} />\n      {calendarView == 'Month' && <Monthly />}\n      {calendarView == 'Week' && <Weekly />}\n      {calendarView == 'Agenda' && <Agenda />}\n      <h1 style={{ textAlign: 'center' }} id='Reservation'>\n        {' '}\n        Reservation{' '}\n      </h1>\n      <Form />\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './bootstrap.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}