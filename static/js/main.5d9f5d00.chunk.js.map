{"version":3,"sources":["components/Agenda.js","components/Buttons.js","components/ReservationForm.js","components/Monthly.js","components/NavigationBar.js","components/Weekly.js","App.js","reportWebVitals.js","index.js"],"names":["Agenda","className","style","height","src","border","width","frameborder","scrolling","Buttons","props","changeView","viewName","Button","variant","currentView","onClick","ReservationForm","useState","firstName","lastName","email","idNumber","reservationReason","rooms","reservationDate","reservationDay","numberOfAttendees","startTime","endTime","organization","formResponses","setFormResponses","isRecurring","setIsRecurring","Form","Group","controlId","Label","Control","type","placeholder","onChange","e","target","value","min","Check","label","checked","concat","filter","Text","valueAsDate","Date","getDay","getTime","getTimezoneOffset","toString","substring","name","id","as","Row","Col","column","start","end","time","step","Monthly","NavigationBar","Navbar","bg","expand","Brand","href","Toggle","aria-controls","Collapse","Nav","Link","Weekly","App","calendarView","setCalendarView","textAlign","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5d9f5d00.chunk.js","sourcesContent":["const Agenda = () => {\n  return (\n    <div className='container mb-5 mt-3'>\n      <div className='row'>\n        <div className='col' style={{ height: '600px' }}>\n          <iframe\n            src='https://calendar.google.com/calendar/embed?height=600&amp;wkst=1&amp;bgcolor=%23ffffff&amp;ctz=America%2FDetroit&amp;src=MTRxNXVrZDNjbGkzNjdzMTdwcWE0b2p0NjRAZ3JvdXAuY2FsZW5kYXIuZ29vZ2xlLmNvbQ&amp;src=ZTA5ZGpybDMzaDRrZHY4aTB2aGZydGFxa2NAZ3JvdXAuY2FsZW5kYXIuZ29vZ2xlLmNvbQ&amp;src=aXF1NzAxbWw4dGEwdmpzb3VnOXZsaWQ5YjBAZ3JvdXAuY2FsZW5kYXIuZ29vZ2xlLmNvbQ&amp;color=%23039BE5&amp;color=%23D50000&amp;color=%237CB342&amp;title=Rec%20Center%20Reservations&amp;showNav=1&amp;showTabs=0&amp;showPrint=0&amp;mode=AGENDA'\n            style={{ border: 'solid 1px #777' }}\n            width='100%'\n            height='100%'\n            frameborder='0'\n            scrolling='no'\n          ></iframe>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Agenda;\n","import Button from 'react-bootstrap/Button';\n\nconst Buttons = (props) => {\n  const changeView = (viewName) => {\n    props.changeView(viewName);\n  };\n\n  return (\n    <div className='container'>\n      <div className='row'>\n        <Button\n          variant={`${props.currentView == 'Month' ? '' : 'outline-'}primary`}\n          className='col'\n          onClick={() => changeView('Month')}\n        >\n          Monthly View\n        </Button>{' '}\n        <Button\n          variant={`${props.currentView == 'Week' ? '' : 'outline-'}primary`}\n          className='col'\n          onClick={() => changeView('Week')}\n        >\n          Weekly View\n        </Button>{' '}\n        <Button\n          variant={`${props.currentView == 'Agenda' ? '' : 'outline-'}primary`}\n          className='col'\n          onClick={() => changeView('Agenda')}\n        >\n          Agenda View\n        </Button>{' '}\n      </div>\n    </div>\n  );\n};\n\nexport default Buttons;\n","import Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport TimePicker from 'react-bootstrap-time-picker';\nimport { useState } from 'react';\n\nconst ReservationForm = () => {\n  const [formResponses, setFormResponses] = useState({\n    firstName: '',\n    lastName: '',\n    email: '',\n    idNumber: '',\n    reservationReason: '',\n    rooms: [],\n    reservationDate: '',\n    reservationDay: '',\n    numberOfAttendees: '',\n    startTime: 28800,\n    endTime: 30600,\n    organization: '',\n  });\n\n  const [isRecurring, setIsRecurring] = useState(false);\n  const [dayOfWeek, setDayOfWeek] = useState(0);\n\n  return (\n    <div className='container'>\n      <div className='row'>\n        <div className='col'></div>\n        <div className='col-9'>\n          <Form>\n            <Form.Group controlId='formBasicEmail'>\n              <Form.Label className='mt-1'>First Name</Form.Label>\n              <Form.Control\n                type='text'\n                placeholder='Enter First Name'\n                onChange={(e) => {\n                  setFormResponses({\n                    ...formResponses,\n                    firstName: e.target.value,\n                  });\n                }}\n              />\n\n              <Form.Label className='mt-1'>Last Name</Form.Label>\n              <Form.Control\n                type='text'\n                placeholder='Enter Last Name'\n                onChange={(e) => {\n                  setFormResponses({\n                    ...formResponses,\n                    lastName: e.target.value,\n                  });\n                }}\n              />\n\n              <Form.Label className='mt-1'>Email</Form.Label>\n              <Form.Control\n                type='text'\n                placeholder='Enter Email Address'\n                onChange={(e) => {\n                  setFormResponses({\n                    ...formResponses,\n                    email: e.target.value,\n                  });\n                }}\n              />\n\n              <Form.Label className='mt-1'>ID Number</Form.Label>\n              <Form.Control\n                type='number'\n                placeholder='Enter ID Number'\n                min='0'\n                onChange={(e) => {\n                  setFormResponses({\n                    ...formResponses,\n                    idNumber: e.target.value,\n                  });\n                }}\n              />\n\n              <Form.Label className='mt-1'>\n                What Is the Reservation For?\n              </Form.Label>\n              <Form.Control\n                type='text'\n                placeholder='Ex. Birthday Party, Club Name Etc.'\n                onChange={(e) => {\n                  setFormResponses({\n                    ...formResponses,\n                    reservationReason: e.target.value,\n                  });\n                }}\n              />\n            </Form.Group>\n\n            <Form.Group controlId='formBasicCheckbox'>\n              <Form.Label>Which Area Would You Like to Reserve?</Form.Label>\n              <hr />\n              <Form.Check\n                type='checkbox'\n                label='Main Rec Center'\n                onClick={(e) => {\n                  if (e.target.checked) {\n                    setFormResponses({\n                      ...formResponses,\n                      rooms: formResponses.rooms.concat('Main Rec Center'),\n                    });\n                  } else {\n                    setFormResponses({\n                      ...formResponses,\n                      rooms: formResponses.rooms.filter(\n                        (value) => value !== 'Main Rec Center'\n                      ),\n                    });\n                  }\n                }}\n              />\n              <Form.Text className='text-muted mb-2'>Capacity 10</Form.Text>\n              <Form.Check\n                type='checkbox'\n                label='Amphitheater'\n                onClick={(e) => {\n                  if (e.target.checked) {\n                    setFormResponses({\n                      ...formResponses,\n                      rooms: formResponses.rooms.concat('Amphitheater'),\n                    });\n                  } else {\n                    setFormResponses({\n                      ...formResponses,\n                      rooms: formResponses.rooms.filter(\n                        (value) => value !== 'Amphitheater'\n                      ),\n                    });\n                  }\n                }}\n              />\n              <Form.Text className='text-muted mb-2'>\n                Capacity 15 (If socially distanced chairs are used)\n              </Form.Text>\n              <Form.Check\n                type='checkbox'\n                label='Study/Conference Room'\n                onClick={(e) => {\n                  if (e.target.checked) {\n                    setFormResponses({\n                      ...formResponses,\n                      rooms: formResponses.rooms.concat(\n                        'Study/Conference Room'\n                      ),\n                    });\n                  } else {\n                    setFormResponses({\n                      ...formResponses,\n                      rooms: formResponses.rooms.filter(\n                        (value) => value !== 'Study/Conference Room'\n                      ),\n                    });\n                  }\n                }}\n              />\n              <Form.Text className='text-muted'>Capacity 2</Form.Text>\n              <hr />\n            </Form.Group>\n\n            <Form.Group controlId='moreQuestions'>\n              <Form.Label className='mt-1'>\n                What Date would you Like to Reserve?\n              </Form.Label>\n              <Form.Control\n                type='date'\n                onChange={(e) => {\n                  if (e.target.valueAsDate === null) {\n                    setFormResponses({\n                      ...formResponses,\n                      reservationDate: '',\n                      reservationDay: '',\n                    });\n                  } else {\n                    let dayOfWeek = new Date(\n                      e.target.value + '00:00:00'\n                    ).getDay();\n                    setFormResponses({\n                      ...formResponses,\n                      reservationDate: e.target.value,\n                      reservationDay: new Date(\n                        e.target.valueAsDate.getTime() +\n                          e.target.valueAsDate.getTimezoneOffset() * 60000\n                      )\n                        .toString()\n                        .substring(0, 3),\n                    });\n                  }\n                }}\n              />\n\n              <Form.Label className='mt-1'>\n                Is This Reservation Recurring?\n              </Form.Label>\n              <Form.Check\n                type='radio'\n                label='Yes'\n                name='formQuestionRadios'\n                id='formQuestionRadios1'\n                onChange={(e) => {\n                  setIsRecurring(true);\n                }}\n              />\n              <Form.Check\n                type='radio'\n                label='No'\n                name='formQuestionRadios'\n                id='formQuestionRadios2'\n                onChange={(e) => {\n                  setIsRecurring(false);\n                }}\n              />\n\n              {isRecurring ? (\n                <div>\n                  <Form.Label className='mt-1'>\n                    How Often Does it Occur?\n                  </Form.Label>\n                  <Form.Control as='select'>\n                    {formResponses.reservationDay !== 'Sat' ? (\n                      <>\n                        <option>Every week</option>\n                        <option>Every other week</option>\n                      </>\n                    ) : (\n                      <></>\n                    )}\n                    <option>Once a month</option>\n                  </Form.Control>\n                </div>\n              ) : (\n                <></>\n              )}\n\n              <Form.Label className='mt-2'>\n                How Many People would be Attending the Reservation?\n              </Form.Label>\n              <Form.Control\n                type='number'\n                placeholder='Enter a number'\n                min='0'\n                onChange={(e) => {\n                  setFormResponses({\n                    ...formResponses,\n                    numberOfAttendees: e.target.value,\n                  });\n                }}\n              />\n            </Form.Group>\n\n            <Form.Label className='mt-1'>\n              What Time Would you Like to Reserve??\n            </Form.Label>\n            <Form.Row>\n              <Col>\n                <Form.Label column='sm'>Start Time</Form.Label>\n                <TimePicker\n                  start='8:00'\n                  end='23:30'\n                  value={formResponses.startTime}\n                  onChange={(time) => {\n                    setFormResponses({\n                      ...formResponses,\n                      startTime: time,\n                    });\n                  }}\n                  step={30}\n                />\n              </Col>\n              <Col>\n                <Form.Label column='sm'>End Time</Form.Label>\n                <TimePicker\n                  start='8:00'\n                  end='23:30'\n                  value={formResponses.endTime}\n                  onChange={(time) => {\n                    setFormResponses({\n                      ...formResponses,\n                      endTime: time,\n                    });\n                  }}\n                  step={30}\n                />\n              </Col>\n            </Form.Row>\n\n            <Form.Group controlId='formOrganization'>\n              <Form.Label className='mt-2'>\n                Is There An Organization Associated with Your Reservation?\n              </Form.Label>\n              <Form.Control\n                type='text'\n                placeholder='Ex. BSCF, AUSA'\n                onChange={(e) => {\n                  setFormResponses({\n                    ...formResponses,\n                    organization: e.target.value,\n                  });\n                }}\n              />\n            </Form.Group>\n\n            <Button variant='primary' type='submit'>\n              Submit\n            </Button>\n          </Form>\n        </div>\n        <div className='col'></div>\n      </div>\n    </div>\n  );\n};\n\nexport default ReservationForm;\n","const Monthly = () => {\n  return (\n    <div className='container mb-5 mt-3'>\n      <div className='row'>\n        <div className='col' style={{ height: '600px' }}>\n          <iframe\n            src='https://calendar.google.com/calendar/embed?height=600&amp;wkst=1&amp;bgcolor=%23ffffff&amp;ctz=America%2FDetroit&amp;src=MTRxNXVrZDNjbGkzNjdzMTdwcWE0b2p0NjRAZ3JvdXAuY2FsZW5kYXIuZ29vZ2xlLmNvbQ&amp;src=ZTA5ZGpybDMzaDRrZHY4aTB2aGZydGFxa2NAZ3JvdXAuY2FsZW5kYXIuZ29vZ2xlLmNvbQ&amp;src=aXF1NzAxbWw4dGEwdmpzb3VnOXZsaWQ5YjBAZ3JvdXAuY2FsZW5kYXIuZ29vZ2xlLmNvbQ&amp;color=%23039BE5&amp;color=%23D50000&amp;color=%237CB342&amp;title=Rec%20Center%20Reservations&amp;showNav=1&amp;showTabs=0&amp;showPrint=0'\n            style={{ border: 'solid 1px #777' }}\n            width='100%'\n            height='100%'\n            frameborder='0'\n            scrolling='no'\n          ></iframe>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Monthly;\n","import Navbar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav';\n\nconst NavigationBar = () => {\n  return (\n    <>\n      <Navbar bg='dark' expand='lg' variant='dark' className='mb-5'>\n        <Navbar.Brand href='#Calendar' className='pl-3'>\n          AU Rec Center\n        </Navbar.Brand>\n        <Navbar.Toggle aria-controls='basic-navbar-nav' />\n        <Navbar.Collapse id='basic-navbar-nav' className='pl-3'>\n          <Nav className='ml-auto pr-3'>\n            <Nav.Link href='#Calendar'>Calendar</Nav.Link>\n            <Nav.Link href='#Reservation'>Reservation</Nav.Link>\n          </Nav>\n        </Navbar.Collapse>\n      </Navbar>\n    </>\n  );\n};\n\nexport default NavigationBar;\n","const Weekly = () => {\n  return (\n    <div className='container mb-5 mt-3'>\n      <div className='row'>\n        <div className='col' style={{ height: '600px' }}>\n          <iframe\n            src='https://calendar.google.com/calendar/embed?height=600&amp;wkst=1&amp;bgcolor=%23ffffff&amp;ctz=America%2FDetroit&amp;src=MTRxNXVrZDNjbGkzNjdzMTdwcWE0b2p0NjRAZ3JvdXAuY2FsZW5kYXIuZ29vZ2xlLmNvbQ&amp;src=ZTA5ZGpybDMzaDRrZHY4aTB2aGZydGFxa2NAZ3JvdXAuY2FsZW5kYXIuZ29vZ2xlLmNvbQ&amp;src=aXF1NzAxbWw4dGEwdmpzb3VnOXZsaWQ5YjBAZ3JvdXAuY2FsZW5kYXIuZ29vZ2xlLmNvbQ&amp;color=%23039BE5&amp;color=%23D50000&amp;color=%237CB342&amp;title=Rec%20Center%20Reservations&amp;showNav=1&amp;showTabs=0&amp;showPrint=0&amp;mode=WEEK'\n            style={{ border: 'solid 1px #777' }}\n            width='100%'\n            height='100%'\n            frameborder='0'\n            scrolling='no'\n          ></iframe>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Weekly;\n","import { useState } from 'react';\nimport './App.css';\nimport Agenda from './components/Agenda';\nimport Buttons from './components/Buttons';\nimport Form from './components/ReservationForm';\nimport Monthly from './components/Monthly';\nimport NavBar from './components/NavigationBar';\nimport Weekly from './components/Weekly';\n\nfunction App() {\n  const [calendarView, setCalendarView] = useState('Month');\n\n  const changeView = (viewName) => {\n    setCalendarView(viewName);\n  };\n\n  return (\n    <>\n      <NavBar />\n      <h1 style={{ textAlign: 'center' }} id='Calendar'>\n        {' '}\n        Calendar{' '}\n      </h1>\n      <Buttons changeView={changeView} currentView={calendarView} />\n      {calendarView == 'Month' && <Monthly />}\n      {calendarView == 'Week' && <Weekly />}\n      {calendarView == 'Agenda' && <Agenda />}\n      <h1 style={{ textAlign: 'center' }} id='Reservation'>\n        {' '}\n        Reservation{' '}\n      </h1>\n      <Form />\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './bootstrap.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}